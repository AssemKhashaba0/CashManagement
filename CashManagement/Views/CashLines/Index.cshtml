@model IEnumerable<CashManagement.Controllers.CashLineViewModel>

@{
    ViewData["Title"] = "إدارة الخطوط النقدية";
    Layout = "/Views/Shared/_LayoutDashbord.cshtml";
}

<style>
    /* الألوان المخصصة */
    :root {
        --primary-color: #1E3A8A;
        --secondary-color: #3B82F6;
        --background-color: #1F2937;
        --accent-color: #34D399;
        --error-color: #F87171;
        --text-color: #F3F4F6;
        --card-bg: #374151;
        --border-color: #4B5563;
        --warning-color: #F59E0B;
        --info-color: #06B6D4;
    }

    .management-container {
        background-color: var(--background-color);
        color: var(--text-color);
        min-height: 100vh;
        padding: 20px;
        direction: rtl;
        font-family: 'Cairo', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .page-header {
        background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
        padding: 30px;
        border-radius: 15px;
        margin-bottom: 30px;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
    }

    .page-header h1 {
        color: white;
        font-size: 2.5rem;
        margin: 0;
        display: flex;
        align-items: center;
        gap: 15px;
    }

    /* Alert Styles */
    .alert {
        border-radius: 10px;
        padding: 15px 20px;
        margin-bottom: 20px;
        border: none;
        display: flex;
        align-items: center;
        gap: 10px;
        font-weight: 500;
    }

    .alert-success {
        background: linear-gradient(135deg, var(--accent-color), #10B981);
        color: white;
    }

    .alert-success::before {
        content: '\f058';
        font-family: 'Font Awesome 5 Free';
        font-weight: 900;
        font-size: 1.2rem;
    }

    .alert-danger {
        background: linear-gradient(135deg, var(--error-color), #EF4444);
        color: white;
    }

    .alert-danger::before {
        content: '\f057';
        font-family: 'Font Awesome 5 Free';
        font-weight: 900;
        font-size: 1.2rem;
    }

    /* Action Buttons */
    .action-bar {
        background: var(--card-bg);
        padding: 25px;
        border-radius: 15px;
        margin-bottom: 25px;
        box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2);
        border: 1px solid var(--border-color);
        display: flex;
        flex-wrap: wrap;
        gap: 15px;
        align-items: center;
    }

    .btn-custom {
        padding: 12px 20px;
        border-radius: 8px;
        border: none;
        font-weight: 600;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        transition: all 0.3s ease;
        cursor: pointer;
        font-size: 0.95rem;
    }

    .btn-primary-custom {
        background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
        color: white;
    }

    .btn-primary-custom:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 16px rgba(30, 58, 138, 0.4);
        color: white;
        text-decoration: none;
    }

    .btn-info-custom {
        background: linear-gradient(135deg, var(--info-color), #0891B2);
        color: white;
    }

    .btn-info-custom:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 16px rgba(6, 182, 212, 0.4);
        color: white;
        text-decoration: none;
    }

    /* Search Form */
    .search-container {
        background: var(--card-bg);
        padding: 25px;
        border-radius: 15px;
        margin-bottom: 25px;
        box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2);
        border: 1px solid var(--border-color);
    }

    .search-form {
        display: flex;
        gap: 15px;
        align-items: end;
        flex-wrap: wrap;
    }

    .form-group-custom {
        flex: 1;
        min-width: 250px;
    }

    .form-label-custom {
        display: block;
        margin-bottom: 8px;
        font-weight: 600;
        color: var(--text-color);
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .form-control-custom {
        width: 100%;
        padding: 12px 15px;
        border: 2px solid var(--border-color);
        border-radius: 8px;
        background: var(--background-color);
        color: var(--text-color);
        font-size: 1rem;
        transition: all 0.3s ease;
    }

    .form-control-custom:focus {
        outline: none;
        border-color: var(--secondary-color);
        box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
    }

    .form-control-custom::placeholder {
        color: #9CA3AF;
    }

    /* Cards Container */
    .cards-container {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));
        gap: 25px;
        padding: 0;
    }

    /* Card Styles */
    .cash-line-card {
        background: var(--card-bg);
        border-radius: 15px;
        border: 1px solid var(--border-color);
        box-shadow: 0 4px 16px rgba(0, 0, 0, 0.2);
        transition: all 0.3s ease;
        overflow: hidden;
        position: relative;
    }

    .cash-line-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
        border-color: var(--secondary-color);
    }

    .card-header {
        background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
        color: white;
        padding: 20px;
        position: relative;
        overflow: hidden;
    }

    .card-header::before {
        content: '';
        position: absolute;
        top: -50%;
        right: -50%;
        width: 100%;
        height: 100%;
        background: rgba(255, 255, 255, 0.1);
        transform: rotate(45deg);
        transition: all 0.3s ease;
    }

    .cash-line-card:hover .card-header::before {
        right: -30%;
    }

    .card-phone-number {
        font-size: 1.4rem;
        font-weight: bold;
        margin: 0;
        display: flex;
        align-items: center;
        gap: 10px;
        position: relative;
        z-index: 2;
    }

    .card-owner-name {
        font-size: 1rem;
        opacity: 0.9;
        margin: 5px 0 0 0;
        position: relative;
        z-index: 2;
    }

    .card-body {
        padding: 20px;
    }

    .card-info-grid {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 15px;
        margin-bottom: 20px;
    }

    .info-item {
        display: flex;
        flex-direction: column;
        gap: 5px;
    }

    .info-label {
        font-size: 0.85rem;
        color: #9CA3AF;
        display: flex;
        align-items: center;
        gap: 5px;
    }

    .info-value {
        font-size: 1rem;
        font-weight: 600;
        color: var(--text-color);
    }

    .info-value.balance {
        font-size: 1.1rem;
        color: var(--accent-color);
    }

    /* Status Badge */
    .status-badge {
        padding: 6px 12px;
        border-radius: 20px;
        font-size: 0.85rem;
        font-weight: bold;
        text-align: center;
        display: inline-flex;
        align-items: center;
        gap: 5px;
        margin-bottom: 15px;
    }

    .status-active {
        background: var(--accent-color);
        color: white;
    }

    .status-frozen {
        background: var(--info-color);
        color: white;
    }

    .status-deleted {
        background: var(--error-color);
        color: white;
    }

    /* Network Type Indicator */
    .network-type {
        display: inline-flex;
        align-items: center;
        gap: 5px;
        padding: 4px 8px;
        border-radius: 15px;
        font-size: 0.85rem;
        font-weight: 500;
        background: rgba(59, 130, 246, 0.2);
        color: var(--secondary-color);
        margin-bottom: 15px;
    }

    /* Progress Sections */
    .progress-section {
        margin-bottom: 20px;
    }

    .progress-title {
        font-size: 0.9rem;
        font-weight: 600;
        margin-bottom: 8px;
        display: flex;
        align-items: center;
        gap: 5px;
        color: var(--text-color);
    }

    .progress-container {
        width: 100%;
        height: 25px;
        background: var(--border-color);
        border-radius: 12px;
        overflow: hidden;
        position: relative;
        display: flex;
        align-items: center;
    }

    .progress-bar-custom {
        height: 100%;
        background: linear-gradient(90deg, var(--accent-color), #10B981);
        border-radius: 12px;
        transition: width 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-weight: bold;
        font-size: 0.8rem;
        position: relative;
        min-width: 40px;
    }

    .progress-warning {
        background: linear-gradient(90deg, var(--warning-color), #F59E0B);
    }

    .progress-danger {
        background: linear-gradient(90deg, var(--error-color), #EF4444);
    }

    /* Action Buttons in Cards */
    .card-actions {
        border-top: 1px solid var(--border-color);
        padding: 15px 20px;
        background: rgba(0, 0, 0, 0.1);
        display: flex;
        flex-wrap: wrap;
        gap: 8px;
        justify-content: center;
    }

    .btn-sm-custom {
        padding: 8px 12px;
        font-size: 0.8rem;
        border-radius: 6px;
        border: none;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.2s ease;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 4px;
        flex: 1;
        justify-content: center;
        min-width: 80px;
    }

    .btn-info-sm {
        background: var(--info-color);
        color: white;
    }

    .btn-warning-sm {
        background: var(--warning-color);
        color: white;
    }

    .btn-danger-sm {
        background: var(--error-color);
        color: white;
    }

    .btn-success-sm {
        background: var(--accent-color);
        color: white;
    }

    .btn-secondary-sm {
        background: var(--border-color);
        color: var(--text-color);
    }

    .btn-sm-custom:hover {
        transform: translateY(-1px);
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
        color: white;
        text-decoration: none;
    }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .management-container {
            padding: 15px;
        }
        
        .page-header h1 {
            font-size: 2rem;
        }
        
        .action-bar {
            flex-direction: column;
            align-items: stretch;
        }
        
        .search-form {
            flex-direction: column;
        }
        
        .form-group-custom {
            min-width: 100%;
        }
        
        .cards-container {
            grid-template-columns: 1fr;
            gap: 20px;
        }
        
        .card-info-grid {
            grid-template-columns: 1fr;
        }
        
        .card-actions {
            flex-direction: column;
        }
        
        .btn-sm-custom {
            width: 100%;
            flex: none;
        }
    }

    @@media (max-width: 1200px) and (min-width: 769px) {
        .cards-container {
            grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
        }
    }

    /* Loading Animation */
    .btn-loading {
        position: relative;
        color: transparent !important;
    }

    .btn-loading::after {
        content: '';
        position: absolute;
        width: 16px;
        height: 16px;
        top: 50%;
        left: 50%;
        margin-left: -8px;
        margin-top: -8px;
        border: 2px solid transparent;
        border-top-color: #ffffff;
        border-radius: 50%;
        animation: spin 1s linear infinite;
    }

    @@keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }

    /* Card Animation */
    .cash-line-card {
        animation: fadeInUp 0.6s ease forwards;
        opacity: 0;
        transform: translateY(20px);
    }

    .cash-line-card:nth-child(odd) {
        animation-delay: 0.1s;
    }

    .cash-line-card:nth-child(even) {
        animation-delay: 0.2s;
    }

    @@keyframes fadeInUp {
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
</style>

<div class="management-container">
    <!-- Page Header -->
    <div class="page-header">
        <h1>
            <i class="fas fa-phone-alt"></i>
            إدارة الخطوط الكاش
        </h1>
    </div>

    <!-- Alert Messages -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">
            @TempData["SuccessMessage"]
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">
            @TempData["ErrorMessage"]
        </div>
    }

    <!-- Action Buttons -->
    @if (User.IsInRole("Admin"))
    {
        <div class="action-bar">
            <a asp-action="Create" class="btn-custom btn-primary-custom">
                <i class="fas fa-plus"></i>
                إضافة خط جديد
            </a>
            <a asp-action="ResetDailyLimits" class="btn-custom btn-info-custom" onclick="return confirm('هل أنت متأكد من إعادة تعيين الحدود اليومية؟')">
                <i class="fas fa-redo"></i>
                إعادة تعيين الحدود اليومية
            </a>
        </div>
    }

    <!-- Search Form -->
    <div class="search-container">
        <form asp-action="SearchAvailableLines" method="post" class="search-form">
            <div class="form-group-custom">
                <label class="form-label-custom">
                    <i class="fas fa-search"></i>
                    البحث عن الخطوط المتاحة
                </label>
                <input type="number" name="amount" class="form-control-custom" 
                       placeholder="أدخل المبلغ للبحث عن الخطوط المتاحة" 
                       step="0.01" min="0" required />
            </div>
            <button type="submit" class="btn-custom btn-primary-custom">
                <i class="fas fa-search"></i>
                بحث
            </button>
        </form>
    </div>

    <!-- Cash Lines Cards -->
    <div class="cards-container">
        @foreach (var item in Model)
        {
            <div class="cash-line-card">
                <!-- Card Header -->
                <div class="card-header">
                    <h3 class="card-phone-number">
                        <i class="fas fa-phone"></i>
                        @Html.DisplayFor(modelItem => item.PhoneNumber)
                    </h3>
                    <p class="card-owner-name">
                        <i class="fas fa-user"></i>
                        @Html.DisplayFor(modelItem => item.OwnerName)
                    </p>
                </div>

                <!-- Card Body -->
                <div class="card-body">
                    <!-- Status and Network -->
                    <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 15px;">
                        @{
                            var statusClass = item.Status.ToString() == "Active" ? "status-active" : 
                                             item.Status.ToString() == "Frozen" ? "status-frozen" : "status-deleted";
                            var statusIcon = item.Status.ToString() == "Active" ? "fas fa-check-circle" : 
                                            item.Status.ToString() == "Frozen" ? "fas fa-snowflake" : "fas fa-times-circle";
                        }
                        <span class="status-badge @statusClass">
                            <i class="@statusIcon"></i>
                            @Html.DisplayFor(modelItem => item.Status)
                        </span>
                        
                        <span class="network-type">
                            <i class="fas fa-signal"></i>
                            @Html.DisplayFor(modelItem => item.NetworkType)
                        </span>
                    </div>

                    <!-- Info Grid -->
                    <div class="card-info-grid">
                        <div class="info-item">
                            <span class="info-label">
                                <i class="fas fa-wallet"></i>
                                الرصيد الحالي
                            </span>
                            <span class="info-value balance">@Html.DisplayFor(modelItem => item.CurrentBalance)</span>
                        </div>
                        
                        <div class="info-item">
                            <span class="info-label">
                                <i class="fas fa-calendar-day"></i>
                                الحد اليومي
                            </span>
                            <span class="info-value">@Html.DisplayFor(modelItem => item.DailyLimit)</span>
                        </div>
                        
                        <div class="info-item">
                            <span class="info-label">
                                <i class="fas fa-calendar"></i>
                                الحد الشهري
                            </span>
                            <span class="info-value">@Html.DisplayFor(modelItem => item.MonthlyLimit)</span>
                        </div>
                    </div>

                    <!-- Progress Bars -->
                    <div class="progress-section">
                        <div class="progress-title">
                            <i class="fas fa-chart-pie"></i>
                            النسبة المتبقية يوميًا
                        </div>
                        @{
                            var dailyClass = item.DailyRemainingPercentage > 50 ? "" : 
                                            item.DailyRemainingPercentage > 25 ? "progress-warning" : "progress-danger";
                        }
                        <div class="progress-container">
                            <div class="progress-bar-custom @dailyClass" style="width: @item.DailyRemainingPercentage%;">
                                @item.DailyRemainingPercentage.ToString("F1")%
                            </div>
                        </div>
                    </div>

                    <div class="progress-section">
                        <div class="progress-title">
                            <i class="fas fa-chart-line"></i>
                            النسبة المتبقية شهريًا
                        </div>
                        @{
                            var monthlyClass = item.MonthlyRemainingPercentage > 50 ? "" : 
                                              item.MonthlyRemainingPercentage > 25 ? "progress-warning" : "progress-danger";
                        }
                        <div class="progress-container">
                            <div class="progress-bar-custom @monthlyClass" style="width: @item.MonthlyRemainingPercentage%;">
                                @item.MonthlyRemainingPercentage.ToString("F1")%
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Card Actions -->
                <div class="card-actions">
                    <a asp-action="Withdraw" asp-controller="CashTransactions" asp-route-cashLineId="@item.Id" class="btn-sm-custom btn-info-sm">
                        <i class="fas fa-arrow-down"></i>
                        سحب
                    </a>
                    <a asp-action="Deposit" asp-controller="CashTransactions" asp-route-cashLineId="@item.Id" class="btn-sm-custom btn-success-sm">
                        <i class="fas fa-arrow-up"></i>
                        إيداع
                    </a>
                    <a asp-action="Details" asp-controller="cashLines" asp-route-id="@item.Id" class="btn-sm-custom btn-info-sm">
                        <i class="fas fa-info-circle"></i>
                        التفاصيل
                    </a>
                    @if (User.IsInRole("Admin"))
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn-sm-custom btn-warning-sm">
                            <i class="fas fa-edit"></i>
                            تعديل
                        </a>
                        if (item.Status != CashManagement.Models.AccountStatus.Deleted)
                        {
                            <form asp-action="Delete" asp-route-id="@item.Id" method="post" style="display:inline;" onsubmit="return confirm('هل أنت متأكد من حذف هذا الخط؟');">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn-sm-custom btn-danger-sm">
                                    <i class="fas fa-trash"></i>
                                    حذف
                                </button>
                            </form>
                        }
                        if (item.Status == CashManagement.Models.AccountStatus.Active)
                        {
                            <form asp-action="Freeze" asp-route-id="@item.Id" method="post" style="display:inline;" onsubmit="return confirm('هل أنت متأكد من تجميد هذا الخط؟');">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn-sm-custom btn-secondary-sm">
                                    <i class="fas fa-snowflake"></i>
                                    تجميد
                                </button>
                            </form>
                        }
                        else if (item.Status == CashManagement.Models.AccountStatus.Frozen)
                        {
                            <form asp-action="Unfreeze" asp-route-id="@item.Id" method="post" style="display:inline;" onsubmit="return confirm('هل أنت متأكد من فك تجميد هذا الخط؟');">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn-sm-custom btn-success-sm">
                                    <i class="fas fa-unlock"></i>
                                    فك التجميد
                                </button>
                            </form>
                        }
                    }
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // إضافة تأثير بصري للأزرار عند الإرسال
            $("form").submit(function () {
                var submitBtn = $(this).find("button[type='submit']");
                var originalText = submitBtn.html();
                
                submitBtn.addClass("btn-loading");
                submitBtn.prop("disabled", true);
                
                // إعادة تفعيل الزر بعد 3 ثواني في حالة عدم الانتقال
                setTimeout(function() {
                    submitBtn.removeClass("btn-loading");
                    submitBtn.prop("disabled", false);
                    submitBtn.html(originalText);
                }, 3000);
            });

            // تحسين تجربة المستخدم للكروت
            $('.cash-line-card').hover(
                function() {
                    $(this).addClass('card-hover-effect');
                },
                function() {
                    $(this).removeClass('card-hover-effect');
                }
            );

            // إضافة تأثيرات التحريك للكروت عند التحميل
            $('.cash-line-card').each(function(index) {
                $(this).css('animation-delay', (index * 0.1) + 's');
            });
        });
    </script>
}