@model CashManagement.Models.InstaPay

@{
    ViewData["Title"] = "إضافة حساب إنستا باي";
    Layout = "/Views/Shared/_LayoutDashbord.cshtml";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

<style>
    /* Light Color Palette Variables */
    :root {
        --background-color: #FDFDFD; /* Off-white */
        --primary-color: #1D4ED8; /* Indigo blue */
        --secondary-color: #FACC15; /* Soft gold */
        --text-color: #111827; /* Soft black for text */
        --card-bg: #FFFFFF; /* White for card backgrounds */
        --header-sidebar-bg: #F3F4F6; /* Very light gray for header/sidebar type elements */
        --success-color: #10B981; /* Tailwind green-500 */
        --error-color: #EF4444; /* Tailwind red-500 */
        --info-color: #3B82F6; /* Tailwind blue-500 */
        --warning-color: #F59E0B; /* Tailwind amber-500 */
        --border-color: rgba(0, 0, 0, 0.1); /* Lighter muted border color */
        --light-text-color: #6B7280; /* Gray for titles/subtitles */
    }

    /* General Styling */
    body {
        background-color: var(--background-color);
        font-family: 'Cairo', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        color: var(--text-color);
        direction: rtl; /* Ensure Right-to-Left for Arabic */
    }

    /* Card Styling */
    .custom-card {
        background-color: var(--card-bg);
        border: 1px solid var(--border-color);
        border-radius: 1rem;
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        margin: 3rem auto; /* Center the card and add vertical space */
        max-width: 600px; /* Max width for the form card */
        animation: fadeIn 0.8s ease-out;
        overflow: hidden;
    }

    .custom-card .card-header {
        background: linear-gradient(135deg, var(--primary-color), var(--info-color));
        color: white;
        padding: 1.5rem;
        font-size: 1.5rem;
        font-weight: 600;
        border-bottom: none;
        display: flex;
        align-items: center;
        gap: 0.75rem;
        border-top-left-radius: 1rem;
        border-top-right-radius: 1rem;
    }

    .custom-card .card-body {
        padding: 2rem;
    }

    /* Alerts */
    .alert {
        padding: 1rem 1.5rem;
        border-radius: 0.75rem;
        margin-bottom: 1.5rem;
        display: flex;
        align-items: flex-start; /* Align icon to top with multiline text */
        gap: 1rem;
        font-weight: 600;
        animation: slideInDown 0.6s ease-out;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        color: white;
        position: relative; /* For close button positioning */
    }

    .alert-success {
        background: linear-gradient(135deg, var(--success-color), #059669);
    }

    .alert-danger {
        background: linear-gradient(135deg, var(--error-color), #B91C1C);
    }

    .alert .fas {
        font-size: 1.5rem;
        animation: pulse 1.5s infinite;
        flex-shrink: 0; /* Prevent icon from shrinking */
        align-self: center; /* Center icon vertically */
    }

    .alert .btn-close {
        position: absolute;
        left: 1rem; /* Adjust for RTL */
        top: 50%;
        transform: translateY(-50%);
        color: white; /* Ensure close button is visible */
        opacity: 0.8;
        filter: invert(1); /* Helps make it visible on dark backgrounds */
        border: none;
        padding: 0.5rem;
        margin: -0.5rem; /* Allow more clickable area */
    }
     .alert .btn-close:hover {
        opacity: 1;
     }

    @@keyframes fadeIn {
        from { opacity: 0; transform: translateY(20px); }
        to { opacity: 1; transform: translateY(0); }
    }

    @@keyframes slideInDown {
        from { opacity: 0; transform: translateY(-20px); }
        to { opacity: 1; transform: translateY(0); }
    }

    @@keyframes pulse {
        0%, 100% { transform: scale(1); }
        50% { transform: scale(1.05); }
    }

    /* Form Styling */
    .form-label {
        color: var(--light-text-color);
        font-weight: 600;
        margin-bottom: 0.5rem;
        display: block;
        font-size: 0.95rem;
    }

    .input-group-text {
        background-color: var(--header-sidebar-bg);
        border: 1px solid var(--border-color);
        border-left: none; /* For RTL */
        border-radius: 0.5rem 0 0 0.5rem; /* Rounded on right for RTL */
        padding: 0.75rem 1rem;
        color: var(--primary-color);
    }

    .input-group .form-control {
        border-right: none; /* For RTL */
        border-radius: 0 0.5rem 0.5rem 0; /* Rounded on left for RTL */
    }

    .form-control {
        background-color: var(--card-bg);
        border: 1px solid var(--border-color);
        border-radius: 0.5rem;
        padding: 0.85rem 1rem;
        width: 100%;
        color: var(--text-color);
        transition: all 0.3s ease;
        font-size: 1rem;
    }

    .form-control:focus {
        border-color: var(--primary-color);
        box-shadow: 0 0 0 3px rgba(29, 78, 216, 0.2);
        outline: none;
        background-color: var(--card-bg);
    }

    .form-control::placeholder {
        color: var(--light-text-color);
        opacity: 0.7;
    }

    .form-control.is-invalid {
        border-color: var(--error-color);
    }

    .form-control.is-valid {
        border-color: var(--success-color);
    }

    .text-danger {
        color: var(--error-color);
        font-size: 0.875rem;
        margin-top: 0.4rem;
        display: block;
    }

    /* Buttons */
    .btn {
        display: inline-flex;
        align-items: center;
        gap: 0.75rem;
        padding: 0.85rem 2rem;
        border-radius: 0.75rem;
        font-weight: 600;
        text-decoration: none;
        transition: all 0.3s ease;
        cursor: pointer;
        font-size: 1rem;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    }

    .btn-tamam {
        background: linear-gradient(135deg, var(--success-color), #059669);
        color: white;
        border: none;
        margin-left: 1rem; /* Space between buttons for RTL */
    }

    .btn-tamam:hover {
        transform: translateY(-3px);
        box-shadow: 0 8px 20px rgba(16, 185, 129, 0.3);
        color: white;
    }

    .btn-secondary {
        background: var(--header-sidebar-bg);
        color: var(--text-color);
        border: 1px solid var(--border-color);
    }

    .btn-secondary:hover {
        transform: translateY(-3px);
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
        background-color: #E5E7EB; /* Slightly darker on hover */
        color: var(--text-color);
    }

    /* Responsive adjustments */
    @@media (max-width: 768px) {
        .custom-card {
            margin: 1.5rem auto;
            border-radius: 0; /* Full width on smaller screens, no rounded corners */
            box-shadow: none; /* No shadow on full width */
        }
        .custom-card .card-header {
            font-size: 1.3rem;
            padding: 1.2rem 1rem;
            border-radius: 0; /* Match card */
        }
        .custom-card .card-body {
            padding: 1.5rem 1rem;
        }
        .alert {
            padding: 0.8rem 1rem;
            font-size: 0.9rem;
            gap: 0.75rem;
        }
        .alert .fas {
            font-size: 1.2rem;
        }
        .btn {
            width: 100%;
            margin-left: 0; /* Remove margin for stacking */
            margin-bottom: 0.75rem; /* Add margin between stacked buttons */
            justify-content: center;
        }
        .btn:last-child {
            margin-bottom: 0; /* No bottom margin for the last button */
        }
    }

    @@media (max-width: 480px) {
        .custom-card .card-header {
            font-size: 1.1rem;
        }
        .custom-card .card-body {
            padding: 1rem 0.8rem;
        }
        .form-label, .form-control, .btn {
            font-size: 0.9rem;
        }
    }
</style>

<div class="custom-card">
    <div class="card-header">
        <h3 class="mb-0"><i class="fas fa-plus-circle me-2"></i>إضافة حساب إنستا باي جديد</h3>
    </div>
    <div class="card-body">
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <i class="fas fa-check-circle"></i>
                <div>@TempData["SuccessMessage"]</div>
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        @if (!ViewData.ModelState.IsValid)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <i class="fas fa-exclamation-circle"></i>
                <div>
                    @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                    {
                        <p class="mb-0">@error.ErrorMessage</p>
                    }
                </div>
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <form asp-action="AddInstaPayAccount" method="post" class="needs-validation" novalidate>
            <div class="mb-3">
                <label asp-for="PhoneNumber" class="form-label">رقم الهاتف</label>
                <div class="input-group">
                    <span class="input-group-text"><i class="fas fa-phone-alt"></i></span> @* Changed to phone-alt for better fit *@
                    <input asp-for="PhoneNumber" class="form-control" placeholder="مثال: 01xxxxxxxxx" required />
                </div>
                <span asp-validation-for="PhoneNumber" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="BankAccountNumber" class="form-label">رقم الحساب البنكي</label>
                <div class="input-group">
                    <span class="input-group-text"><i class="fas fa-university"></i></span>
                    <input asp-for="BankAccountNumber" class="form-control" placeholder="أدخل رقم الحساب البنكي" required />
                </div>
                <span asp-validation-for="BankAccountNumber" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="BankName" class="form-label">اسم البنك</label>
                <div class="input-group">
                    <span class="input-group-text"><i class="fas fa-building"></i></span>
                    <input asp-for="BankName" class="form-control" placeholder="أدخل اسم البنك (مثال: بنك مصر)" required />
                </div>
                <span asp-validation-for="BankName" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="CurrentBalance" class="form-label">الرصيد الحالي</label>
                <div class="input-group">
                    <span class="input-group-text"><i class="fas fa-money-bill-wave"></i></span> @* Changed icon for money *@
                    <input asp-for="CurrentBalance" class="form-control" type="number" step="0.01" placeholder="أدخل الرصيد الأولي للحساب" required />
                </div>
                <span asp-validation-for="CurrentBalance" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="Status" class="form-label">حالة الحساب</label>
                <div class="input-group">
                    <span class="input-group-text"><i class="fas fa-toggle-on"></i></span> @* Icon for status *@
                    <select asp-for="Status" class="form-control" asp-items="Html.GetEnumSelectList<AccountStatus>()" required>
                        <option value="">-- اختر الحالة --</option>
                    </select>
                </div>
                <span asp-validation-for="Status" class="text-danger"></span>
            </div>
            <div class="mt-4 text-center"> @* Added text-center for button alignment *@
                <button type="submit" class="btn btn-tamam">
                    <i class="fas fa-check"></i> حفظ الحساب
                </button>
                <a asp-action="Manage" class="btn btn-secondary">
                    <i class="fas fa-arrow-right"></i> رجوع لإدارة الحسابات
                </a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Custom validation feedback, if you want to override Bootstrap's default
        // The `needs-validation` and `novalidate` attributes on the form, along with
        // the default Bootstrap CSS classes for validation (`is-invalid`, `is-valid`),
        // handle most of this automatically.
        // This script is largely redundant if Bootstrap's default validation feedback
        // is sufficient, but can be kept if you have specific custom validation needs.
        $(document).ready(function () {
            // Re-apply `is-invalid` and `is-valid` classes after initial load or submit
            // This is often handled by built-in MVC client-side validation scripts.
            $("form").on('submit', function() {
                $(this).addClass('was-validated'); // Trigger Bootstrap's validation styles
            });

            // If you want more granular control over specific input classes:
            $('input, select, textarea').on('input change', function() {
                if ($(this).hasClass('is-invalid') && $(this).val() !== '') {
                    $(this).removeClass('is-invalid').addClass('is-valid');
                } else if ($(this).attr('required') && $(this).val() === '') {
                     $(this).removeClass('is-valid').addClass('is-invalid');
                }
            });
        });
    </script>
}