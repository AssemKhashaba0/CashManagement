@model CashManagement.Controllers.UserDetailsViewModel

@{
    ViewData["Title"] = "تفاصيل المستخدم";
    Layout = "/Views/Shared/_LayoutDashbord.cshtml";
}

<style>
    :root {
        --primary-color: #1E3A8A;
        --secondary-color: #3B82F6;
        --background-color: #1F2937;
        --accent-color: #34D399;
        --error-color: #F87171;
        --text-color: #F3F4F6;
        --card-bg: #374151;
        --border-color: #4B5563;
        --warning-color: #F59E0B;
    }

    .user-details-container {
        background: linear-gradient(135deg, var(--background-color) 0%, #111827 100%);
        color: var(--text-color);
        min-height: 100vh;
        padding: 2rem 0;
    }

    .page-header {
        text-align: center;
        margin-bottom: 3rem;
        position: relative;
    }

    .page-header::before {
        content: '';
        position: absolute;
        bottom: -10px;
        left: 50%;
        transform: translateX(-50%);
        width: 100px;
        height: 4px;
        background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));
        border-radius: 2px;
    }

    .main-title {
        font-size: 2.5rem;
        font-weight: 700;
        color: var(--text-color);
        margin-bottom: 0.5rem;
        text-shadow: 0 2px 4px rgba(0,0,0,0.3);
    }

    .enhanced-card {
        background: var(--card-bg);
        border: 1px solid var(--border-color);
        border-radius: 16px;
        box-shadow: 0 8px 32px rgba(0,0,0,0.3);
        transition: all 0.3s ease;
        overflow: hidden;
        margin-bottom: 2rem;
    }

    .enhanced-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 16px 48px rgba(0,0,0,0.4);
    }

    .card-header-enhanced {
        background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
        color: white;
        padding: 1.5rem;
        border-bottom: none;
        position: relative;
        overflow: hidden;
    }

    .card-header-enhanced::before {
        content: '';
        position: absolute;
        top: 0;
        right: 0;
        width: 100%;
        height: 100%;
        background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="20" cy="20" r="1" fill="white" opacity="0.1"/><circle cx="80" cy="40" r="1" fill="white" opacity="0.1"/><circle cx="40" cy="80" r="1" fill="white" opacity="0.1"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>');
        opacity: 0.1;
    }

    .card-header-enhanced h5 {
        font-size: 1.3rem;
        font-weight: 600;
        margin: 0;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        position: relative;
        z-index: 1;
    }

    .card-body-enhanced {
        padding: 2rem;
        background: var(--card-bg);
    }

    .info-row {
        display: flex;
        align-items: center;
        padding: 1rem 0;
        border-bottom: 1px solid var(--border-color);
        transition: all 0.2s ease;
    }

    .info-row:last-child {
        border-bottom: none;
    }

    .info-row:hover {
        background: rgba(59, 130, 246, 0.1);
        padding-right: 1rem;
        border-radius: 8px;
    }

    .info-label {
        font-weight: 600;
        color: var(--secondary-color);
        min-width: 150px;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .info-value {
        color: var(--text-color);
        flex: 1;
    }

    .status-badge {
        padding: 0.5rem 1rem;
        border-radius: 20px;
        font-weight: 600;
        font-size: 0.875rem;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
    }

    .status-active {
        background: linear-gradient(135deg, var(--accent-color), #10B981);
        color: white;
    }

    .status-inactive {
        background: linear-gradient(135deg, var(--error-color), #EF4444);
        color: white;
    }

    .action-buttons {
        display: flex;
        gap: 1rem;
        flex-wrap: wrap;
        margin-top: 2rem;
    }

    .btn-enhanced {
        padding: 0.75rem 1.5rem;
        border-radius: 10px;
        font-weight: 600;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.3s ease;
        border: none;
        cursor: pointer;
        position: relative;
        overflow: hidden;
    }

    .btn-enhanced::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
        transition: left 0.5s;
    }

    .btn-enhanced:hover::before {
        left: 100%;
    }

    .btn-danger-enhanced {
        background: linear-gradient(135deg, var(--error-color), #DC2626);
        color: white;
    }

    .btn-danger-enhanced:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(248, 113, 113, 0.4);
    }

    .btn-success-enhanced {
        background: linear-gradient(135deg, var(--accent-color), #059669);
        color: white;
    }

    .btn-success-enhanced:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(52, 211, 153, 0.4);
    }

    .btn-warning-enhanced {
        background: linear-gradient(135deg, var(--warning-color), #D97706);
        color: white;
    }

    .btn-warning-enhanced:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(245, 158, 11, 0.4);
    }

    .btn-secondary-enhanced {
        background: linear-gradient(135deg, #6B7280, #4B5563);
        color: white;
    }

    .btn-secondary-enhanced:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(107, 114, 128, 0.4);
    }

    .transactions-table {
        background: var(--card-bg);
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 4px 16px rgba(0,0,0,0.2);
    }

    .transactions-table thead {
        background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
    }

    .transactions-table th {
        color: white;
        font-weight: 600;
        padding: 1rem;
        border: none;
        text-align: center;
    }

    .transactions-table td {
        padding: 1rem;
        border-color: var(--border-color);
        color: var(--text-color);
        text-align: center;
        vertical-align: middle;
    }

    .transactions-table tbody tr {
        transition: all 0.2s ease;
    }

    .transactions-table tbody tr:hover {
        background: rgba(59, 130, 246, 0.1);
        transform: scale(1.01);
    }

    .alert-enhanced {
        border-radius: 12px;
        border: none;
        padding: 1rem 1.5rem;
        margin-bottom: 2rem;
        position: relative;
        overflow: hidden;
    }

    .alert-success-enhanced {
        background: linear-gradient(135deg, rgba(52, 211, 153, 0.1), rgba(16, 185, 129, 0.1));
        color: var(--accent-color);
        border-right: 4px solid var(--accent-color);
    }

    .alert-danger-enhanced {
        background: linear-gradient(135deg, rgba(248, 113, 113, 0.1), rgba(239, 68, 68, 0.1));
        color: var(--error-color);
        border-right: 4px solid var(--error-color);
    }

    .section-title {
        font-size: 1.8rem;
        font-weight: 700;
        color: var(--text-color);
        margin: 3rem 0 2rem 0;
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .section-title::before {
        content: '';
        width: 4px;
        height: 30px;
        background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
        border-radius: 2px;
    }

    .empty-state {
        text-align: center;
        padding: 3rem;
        color: #9CA3AF;
    }

    .empty-state i {
        font-size: 3rem;
        margin-bottom: 1rem;
        opacity: 0.5;
    }

    .grid-layout {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 2rem;
        margin-bottom: 3rem;
    }

    .stats-card {
        background: linear-gradient(135deg, var(--card-bg), #2D3748);
        border: 1px solid var(--border-color);
        border-radius: 16px;
        padding: 2rem;
        text-align: center;
        position: relative;
        overflow: hidden;
        transition: all 0.3s ease;
    }

    .stats-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: linear-gradient(90deg, var(--primary-color), var(--secondary-color), var(--accent-color));
    }

    .stats-card:hover {
        transform: translateY(-8px);
        box-shadow: 0 20px 40px rgba(0,0,0,0.4);
    }

    .stats-icon {
        font-size: 2.5rem;
        margin-bottom: 1rem;
        display: block;
        background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    .stats-number {
        font-size: 2rem;
        font-weight: 700;
        color: var(--text-color);
        margin-bottom: 0.5rem;
    }

    .stats-label {
        color: var(--secondary-color);
        font-weight: 600;
    }

    .responsive-table-wrapper {
        position: relative;
        overflow: hidden;
        border-radius: 16px;
        box-shadow: 0 8px 32px rgba(0,0,0,0.3);
    }

    .table-scroll {
        overflow-x: auto;
        scrollbar-width: thin;
        scrollbar-color: var(--secondary-color) var(--card-bg);
    }

    .table-scroll::-webkit-scrollbar {
        height: 8px;
    }

    .table-scroll::-webkit-scrollbar-track {
        background: var(--card-bg);
    }

    .table-scroll::-webkit-scrollbar-thumb {
        background: var(--secondary-color);
        border-radius: 4px;
    }

    .mobile-card {
        display: none;
        background: var(--card-bg);
        border: 1px solid var(--border-color);
        border-radius: 12px;
        padding: 1.5rem;
        margin-bottom: 1rem;
        transition: all 0.3s ease;
    }

    .mobile-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 24px rgba(0,0,0,0.3);
    }

    .mobile-card-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1rem;
        padding-bottom: 1rem;
        border-bottom: 1px solid var(--border-color);
    }

    .mobile-card-id {
        font-weight: 700;
        color: var(--secondary-color);
    }

    .mobile-card-amount {
        font-size: 1.25rem;
        font-weight: 700;
        color: var(--accent-color);
    }

    .mobile-card-details {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 1rem;
    }

    .mobile-detail {
        display: flex;
        flex-direction: column;
        gap: 0.25rem;
    }

    .mobile-detail-label {
        font-size: 0.875rem;
        color: var(--secondary-color);
        font-weight: 600;
    }

    .mobile-detail-value {
        color: var(--text-color);
    }

    .floating-action-button {
        position: fixed;
        bottom: 2rem;
        left: 2rem;
        width: 60px;
        height: 60px;
        border-radius: 50%;
        background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
        color: white;
        border: none;
        font-size: 1.5rem;
        cursor: pointer;
        box-shadow: 0 8px 24px rgba(30, 58, 138, 0.4);
        transition: all 0.3s ease;
        z-index: 1000;
        display: none;
    }

    .floating-action-button:hover {
        transform: scale(1.1);
        box-shadow: 0 12px 32px rgba(30, 58, 138, 0.6);
    }

    .breadcrumb-nav {
        background: rgba(55, 65, 81, 0.5);
        border-radius: 12px;
        padding: 1rem 1.5rem;
        margin-bottom: 2rem;
        backdrop-filter: blur(10px);
        border: 1px solid var(--border-color);
    }

    .breadcrumb-nav a {
        color: var(--secondary-color);
        text-decoration: none;
        font-weight: 600;
    }

    .breadcrumb-nav a:hover {
        color: var(--text-color);
    }

    .animated-counter {
        opacity: 0;
        transform: translateY(20px);
        animation: countUp 0.8s ease forwards;
    }

    @@keyframes countUp {
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .loading-skeleton {
        background: linear-gradient(90deg, var(--card-bg) 25%, #4A5568 50%, var(--card-bg) 75%);
        background-size: 200% 100%;
        animation: loading 1.5s infinite;
        border-radius: 8px;
        height: 20px;
        margin-bottom: 1rem;
    }

    @@keyframes loading {
        0% { background-position: 200% 0; }
        100% { background-position: -200% 0; }
    }

    .tooltip-container {
        position: relative;
        cursor: help;
    }

    .tooltip-container::after {
        content: attr(data-tooltip);
        position: absolute;
        bottom: 100%;
        left: 50%;
        transform: translateX(-50%);
        background: var(--primary-color);
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 8px;
        font-size: 0.875rem;
        white-space: nowrap;
        opacity: 0;
        visibility: hidden;
        transition: all 0.3s ease;
        z-index: 1000;
    }

    .tooltip-container:hover::after {
        opacity: 1;
        visibility: visible;
        transform: translateX(-50%) translateY(-5px);
    }

    /* Responsive Breakpoints */
    @@media (max-width: 1200px) {
        .container {
            padding: 1.5rem;
        }
        
        .main-title {
            font-size: 2rem;
        }
    }

    @@media (max-width: 992px) {
        .grid-layout {
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1.5rem;
        }
        
        .info-row {
            flex-direction: column;
            align-items: flex-start;
            gap: 0.5rem;
            padding: 0.75rem 0;
        }
        
        .info-label {
            min-width: auto;
            font-size: 0.875rem;
        }
        
        .action-buttons {
            flex-direction: column;
            gap: 0.75rem;
        }
        
        .btn-enhanced {
            justify-content: center;
            width: 100%;
        }
    }

    @@media (max-width: 768px) {
        .container {
            padding: 1rem;
        }
        
        .main-title {
            font-size: 1.75rem;
        }
        
        .section-title {
            font-size: 1.5rem;
            margin: 2rem 0 1.5rem 0;
        }
        
        .card-body-enhanced {
            padding: 1.5rem;
        }
        
        .transactions-table {
            display: none;
        }
        
        .mobile-card {
            display: block;
        }
        
        .floating-action-button {
            display: block;
        }
        
        .stats-card {
            padding: 1.5rem;
        }
        
        .stats-icon {
            font-size: 2rem;
        }
        
        .stats-number {
            font-size: 1.5rem;
        }
        
        .grid-layout {
            grid-template-columns: 1fr;
            gap: 1rem;
        }
        
        .mobile-card-details {
            grid-template-columns: 1fr;
        }
    }

    @@media (max-width: 576px) {
        .page-header {
            margin-bottom: 2rem;
        }
        
        .main-title {
            font-size: 1.5rem;
        }
        
        .enhanced-card {
            margin-bottom: 1.5rem;
        }
        
        .card-body-enhanced {
            padding: 1rem;
        }
        
        .action-buttons {
            gap: 0.5rem;
        }
        
        .btn-enhanced {
            padding: 0.5rem 1rem;
            font-size: 0.875rem;
        }
        
        .floating-action-button {
            width: 50px;
            height: 50px;
            font-size: 1.25rem;
            bottom: 1rem;
            left: 1rem;
        }
    }

    /* Dark mode enhancements */
    @@media (prefers-color-scheme: dark) {
        :root {
            --text-color: #F9FAFB;
            --card-bg: #2D3748;
            --border-color: #4A5568;
        }
    }

    /* High contrast mode */
    @@media (prefers-contrast: high) {
        .enhanced-card {
            border-width: 2px;
        }
        
        .btn-enhanced {
            border: 2px solid currentColor;
        }
    }

    /* Reduced motion for accessibility */
    @@media (prefers-reduced-motion: reduce) {
        * {
            animation-duration: 0.01ms !important;
            animation-iteration-count: 1 !important;
            transition-duration: 0.01ms !important;
        }
    }

    /* Print styles */
    @@media print {
        .floating-action-button,
        .action-buttons,
        .btn-enhanced {
            display: none !important;
        }
        
        .enhanced-card {
            box-shadow: none;
            border: 1px solid #000;
            break-inside: avoid;
        }
        
        .page-header::before {
            display: none;
        }
    }
</style>

<div class="user-details-container" dir="rtl">
    <div class="container">
        <div class="page-header">
            <h1 class="main-title">
                <i class="fas fa-user-circle"></i>
                تفاصيل المستخدم
            </h1>
        </div>

        @if (TempData["Success"] != null)
        {
            <div class="alert alert-success-enhanced alert-dismissible fade show" role="alert">
                <i class="fas fa-check-circle"></i>
                @TempData["Success"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="إغلاق"></button>
            </div>
        }
        @if (TempData["Error"] != null)
        {
            <div class="alert alert-danger-enhanced alert-dismissible fade show" role="alert">
                <i class="fas fa-exclamation-triangle"></i>
                @TempData["Error"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="إغلاق"></button>
            </div>
        }

        <div class="enhanced-card">
            <div class="card-header-enhanced">
                <h5>
                    <i class="fas fa-user"></i>
                    معلومات المستخدم
                </h5>
            </div>
            <div class="card-body-enhanced">
                <div class="info-row">
                    <div class="info-label">
                        <i class="fas fa-id-card"></i>
                        الاسم الكامل
                    </div>
                    <div class="info-value">@Model.FullName</div>
                </div>
                <div class="info-row">
                    <div class="info-label">
                        <i class="fas fa-envelope"></i>
                        البريد الإلكتروني
                    </div>
                    <div class="info-value">@Model.Email</div>
                </div>
                <div class="info-row">
                    <div class="info-label">
                        <i class="fas fa-user-tag"></i>
                        اسم المستخدم
                    </div>
                    <div class="info-value">@Model.UserName</div>
                </div>
                <div class="info-row">
                    <div class="info-label">
                        <i class="fas fa-users-cog"></i>
                        الأدوار
                    </div>
                    <div class="info-value">@(Model.Roles.Any() ? string.Join(", ", Model.Roles) : "لا توجد أدوار")</div>
                </div>
                <div class="info-row">
                    <div class="info-label">
                        <i class="fas fa-toggle-on"></i>
                        الحالة
                    </div>
                    <div class="info-value">
                        @if (Model.IsActive)
                        {
                            <span class="status-badge status-active">
                                <i class="fas fa-check"></i>
                                نشط
                            </span>
                        }
                        else
                        {
                            <span class="status-badge status-inactive">
                                <i class="fas fa-times"></i>
                                مجمد
                            </span>
                        }
                    </div>
                </div>
                <div class="info-row">
                    <div class="info-label">
                        <i class="fas fa-calendar-plus"></i>
                        تاريخ الإنشاء
                    </div>
                    <div class="info-value">@Model.CreatedAt.ToString("dd/MM/yyyy HH:mm")</div>
                </div>
                <div class="info-row">
                    <div class="info-label">
                        <i class="fas fa-calendar-edit"></i>
                        تاريخ آخر تحديث
                    </div>
                    <div class="info-value">@(Model.UpdatedAt?.ToString("dd/MM/yyyy HH:mm") ?? "غير محدث")</div>
                </div>

                <div class="action-buttons">
                    @if (Model.IsActive)
                    {
                        <form asp-action="Freeze" asp-route-id="@Model.Id" method="post" style="display:inline;" onsubmit="return confirm('هل أنت متأكد من تجميد هذا الحساب؟');">
                            <button type="submit" class="btn-enhanced btn-danger-enhanced">
                                <i class="fas fa-snowflake"></i>
                                تجميد
                            </button>
                        </form>
                    }
                    else
                    {
                        <form asp-action="Unfreeze" asp-route-id="@Model.Id" method="post" style="display:inline;" onsubmit="return confirm('هل أنت متأكد من إلغاء تجميد هذا الحساب؟');">
                            <button type="submit" class="btn-enhanced btn-success-enhanced">
                                <i class="fas fa-unlock"></i>
                                إلغاء التجميد
                            </button>
                        </form>
                    }
                    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn-enhanced btn-warning-enhanced">
                        <i class="fas fa-edit"></i>
                        تحديث
                    </a>
                    <a asp-action="Index" class="btn-enhanced btn-secondary-enhanced">
                        <i class="fas fa-arrow-right"></i>
                        العودة
                    </a>
                </div>
            </div>
        </div>

        <!-- Navigation Breadcrumb -->
        <nav class="breadcrumb-nav">
            <a href="#" onclick="history.back()">
                <i class="fas fa-home"></i> الرئيسية
            </a>
            <span class="mx-2">/</span>
            <a href="@Url.Action("Index")">
                <i class="fas fa-users"></i> المستخدمين
            </a>
            <span class="mx-2">/</span>
            <span style="color: var(--text-color);">تفاصيل المستخدم</span>
        </nav>

        <!-- Statistics Overview -->
        <div class="grid-layout">
            <div class="stats-card">
                <i class="fas fa-money-bill-wave stats-icon"></i>
                <div class="stats-number animated-counter">@Model.CashTransactions.Count()</div>
                <div class="stats-label">عمليات الكاش</div>
            </div>
            <div class="stats-card">
                <i class="fas fa-coins stats-icon"></i>
                <div class="stats-number animated-counter">@Model.PhysicalCashTransactions.Count()</div>
                <div class="stats-label">عمليات النقدية</div>
            </div>
            <div class="stats-card">
                <i class="fas fa-mobile-alt stats-icon"></i>
                <div class="stats-number animated-counter">@Model.InstaPayTransactions.Count()</div>
                <div class="stats-label">عمليات إنستا باي</div>
            </div>
            <div class="stats-card">
                <i class="fas fa-bolt stats-icon"></i>
                <div class="stats-number animated-counter">@Model.FawryTransactions.Count()</div>
                <div class="stats-label">عمليات فوري</div>
            </div>
            <div class="stats-card">
                <i class="fas fa-truck stats-icon"></i>
                <div class="stats-number animated-counter">@Model.SupplierTransactions.Count()</div>
                <div class="stats-label">عمليات الموردين</div>
            </div>
            <div class="stats-card tooltip-container" data-tooltip="إجمالي جميع المعاملات">
                <i class="fas fa-chart-pie stats-icon"></i>
                <div class="stats-number animated-counter">
                    @(Model.CashTransactions.Count() + Model.PhysicalCashTransactions.Count() + 
                      Model.InstaPayTransactions.Count() + Model.FawryTransactions.Count() + 
                      Model.SupplierTransactions.Count())
                </div>
                <div class="stats-label">إجمالي المعاملات</div>
            </div>
        </div>

        <h2 class="section-title">
            <i class="fas fa-chart-line"></i>
            المعاملات المالية
        </h2>

        <!-- عمليات الكاش -->
        <div class="enhanced-card">
            <div class="card-header-enhanced">
                <h5>
                    <i class="fas fa-money-bill-wave"></i>
                    عمليات الكاش
                </h5>
            </div>
            <div class="card-body-enhanced">
                @if (Model.CashTransactions.Any())
                {
                    <!-- Desktop Table -->
                    <div class="responsive-table-wrapper">
                        <div class="table-scroll">
                            <table class="table transactions-table">
                                <thead>
                                    <tr>
                                        <th><i class="fas fa-hashtag"></i> المعرف</th>
                                        <th><i class="fas fa-dollar-sign"></i> المبلغ</th>
                                        <th><i class="fas fa-exchange-alt"></i> النوع</th>
                                        <th><i class="fas fa-info-circle"></i> الحالة</th>
                                        <th><i class="fas fa-calendar"></i> تاريخ الإنشاء</th>
                                        <th><i class="fas fa-phone"></i> خط الكاش</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var transaction in Model.CashTransactions)
                                    {
                                        <tr>
                                            <td>@transaction.Id</td>
                                            <td>@transaction.Amount.ToString("C")</td>
                                            <td>@transaction.TransactionType</td>
                                            <td>@transaction.Status</td>
                                            <td>@transaction.CreatedAt.ToString("dd/MM/yyyy HH:mm")</td>
                                            <td>@(transaction.CashLine?.PhoneNumber ?? "غير محدد")</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>

                    <!-- Mobile Cards -->
                    @foreach (var transaction in Model.CashTransactions)
                    {
                        <div class="mobile-card">
                            <div class="mobile-card-header">
                                <div class="mobile-card-id">#@transaction.Id</div>
                                <div class="mobile-card-amount">@transaction.Amount.ToString("C")</div>
                            </div>
                            <div class="mobile-card-details">
                                <div class="mobile-detail">
                                    <div class="mobile-detail-label">النوع</div>
                                    <div class="mobile-detail-value">@transaction.TransactionType</div>
                                </div>
                                <div class="mobile-detail">
                                    <div class="mobile-detail-label">الحالة</div>
                                    <div class="mobile-detail-value">@transaction.Status</div>
                                </div>
                                <div class="mobile-detail">
                                    <div class="mobile-detail-label">التاريخ</div>
                                    <div class="mobile-detail-value">@transaction.CreatedAt.ToString("dd/MM/yyyy")</div>
                                </div>
                                <div class="mobile-detail">
                                    <div class="mobile-detail-label">خط الكاش</div>
                                    <div class="mobile-detail-value">@(transaction.CashLine?.PhoneNumber ?? "غير محدد")</div>
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="empty-state">
                        <i class="fas fa-inbox"></i>
                        <p>لا توجد عمليات كاش متاحة.</p>
                    </div>
                }
            </div>
        </div>

        <!-- عمليات النقدية -->
        <div class="enhanced-card">
            <div class="card-header-enhanced">
                <h5>
                    <i class="fas fa-coins"></i>
                    عمليات النقدية
                </h5>
            </div>
            <div class="card-body-enhanced">
                @if (Model.PhysicalCashTransactions.Any())
                {
                    <div class="table-responsive">
                        <table class="table transactions-table">
                            <thead>
                                <tr>
                                    <th><i class="fas fa-hashtag"></i> المعرف</th>
                                    <th><i class="fas fa-dollar-sign"></i> المبلغ</th>
                                    <th><i class="fas fa-exchange-alt"></i> النوع</th>
                                    <th><i class="fas fa-file-alt"></i> الوصف</th>
                                    <th><i class="fas fa-calendar"></i> تاريخ الإنشاء</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var transaction in Model.PhysicalCashTransactions)
                                {
                                    <tr>
                                        <td>@transaction.Id</td>
                                        <td>@transaction.Amount</td>
                                        <td>@transaction.TransactionType</td>
                                        <td>@(transaction.Description ?? "غير متوفر")</td>
                                        <td>@transaction.CreatedAt.ToString("dd/MM/yyyy HH:mm")</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="empty-state">
                        <i class="fas fa-inbox"></i>
                        <p>لا توجد عمليات نقدية متاحة.</p>
                    </div>
                }
            </div>
        </div>

        <!-- عمليات إنستا باي -->
        <div class="enhanced-card">
            <div class="card-header-enhanced">
                <h5>
                    <i class="fas fa-mobile-alt"></i>
                    عمليات إنستا باي
                </h5>
            </div>
            <div class="card-body-enhanced">
                @if (Model.InstaPayTransactions.Any())
                {
                    <div class="table-responsive">
                        <table class="table transactions-table">
                            <thead>
                                <tr>
                                    <th><i class="fas fa-hashtag"></i> المعرف</th>
                                    <th><i class="fas fa-dollar-sign"></i> المبلغ</th>
                                    <th><i class="fas fa-exchange-alt"></i> النوع</th>
                                    <th><i class="fas fa-info-circle"></i> الحالة</th>
                                    <th><i class="fas fa-calendar"></i> تاريخ الإنشاء</th>
                                    <th><i class="fas fa-phone"></i> حساب إنستا باي</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var transaction in Model.InstaPayTransactions)
                                {
                                    <tr>
                                        <td>@transaction.Id</td>
                                        <td>@transaction.Amount</td>
                                        <td>@transaction.TransactionType</td>
                                        <td>@transaction.Status</td>
                                        <td>@transaction.CreatedAt.ToString("dd/MM/yyyy HH:mm")</td>
                                        <td>@(transaction.InstaPay?.PhoneNumber ?? "غير محدد")</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="empty-state">
                        <i class="fas fa-inbox"></i>
                        <p>لا توجد عمليات إنستا باي متاحة.</p>
                    </div>
                }
            </div>
        </div>

        <!-- عمليات فوري -->
        <div class="enhanced-card">
            <div class="card-header-enhanced">
                <h5>
                    <i class="fas fa-bolt"></i>
                    عمليات فوري
                </h5>
            </div>
            <div class="card-body-enhanced">
                @if (Model.FawryTransactions.Any())
                {
                    <div class="table-responsive">
                        <table class="table transactions-table">
                            <thead>
                                <tr>
                                    <th><i class="fas fa-hashtag"></i> المعرف</th>
                                    <th><i class="fas fa-dollar-sign"></i> المبلغ</th>
                                    <th><i class="fas fa-exchange-alt"></i> النوع</th>
                                    <th><i class="fas fa-info-circle"></i> الحالة</th>
                                    <th><i class="fas fa-calendar"></i> تاريخ الإنشاء</th>
                                    <th><i class="fas fa-cog"></i> الخدمة</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var transaction in Model.FawryTransactions)
                                {
                                    <tr>
                                        <td>@transaction.Id</td>
                                        <td>@transaction.Amount</td>
                                        <td>@transaction.TransactionType</td>
                                        <td>@transaction.Status</td>
                                        <td>@transaction.CreatedAt.ToString("dd/MM/yyyy HH:mm")</td>
                                        <td>@(transaction.FawryService?.ServiceName ?? "غير محدد")</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="empty-state">
                        <i class="fas fa-inbox"></i>
                        <p>لا توجد عمليات فوري متاحة.</p>
                    </div>
                }
            </div>
        </div>

        <!-- عمليات الموردين -->
        <div class="enhanced-card">
            <div class="card-header-enhanced">
                <h5>
                    <i class="fas fa-truck"></i>
                    عمليات الموردين
                </h5>
            </div>
            <div class="card-body-enhanced">
                @if (Model.SupplierTransactions.Any())
                {
                    <div class="table-responsive">
                        <table class="table transactions-table">
                            <thead>
                                <tr>
                                    <th><i class="fas fa-hashtag"></i> المعرف</th>
                                    <th><i class="fas fa-dollar-sign"></i> المبلغ</th>
                                    <th><i class="fas fa-exchange-alt"></i> النوع</th>
                                    <th><i class="fas fa-calendar"></i> تاريخ المعاملة</th>
                                    <th><i class="fas fa-building"></i> المورد</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var transaction in Model.SupplierTransactions)
                                {
                                    <tr>
                                        <td>@transaction.Id</td>
                                        <td>@transaction.Amount</td>
                                        <td>@transaction.DebitCreditType</td>
                                        <td>@transaction.TransactionDate.ToString("dd/MM/yyyy HH:mm")</td>
                                        <td>@(transaction.Supplier?.Name ?? "غير محدد")</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="empty-state">
                        <i class="fas fa-inbox"></i>
                        <p>لا توجد عمليات موردين متاحة.</p>
                    </div>
                }
            </div>
        </div>
        <!-- Floating Action Button -->
        <button class="floating-action-button" onclick="scrollToTop()" title="العودة للأعلى">
            <i class="fas fa-arrow-up"></i>
        </button>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Enhanced animations and interactions
        document.addEventListener('DOMContentLoaded', function() {
            // Animate cards on scroll with stagger effect
            const cards = document.querySelectorAll('.enhanced-card, .stats-card');
            const observer = new IntersectionObserver((entries) => {
                entries.forEach((entry, index) => {
                    if (entry.isIntersecting) {
                        setTimeout(() => {
                            entry.target.style.opacity = '1';
                            entry.target.style.transform = 'translateY(0)';
                        }, index * 100);
                    }
                });
            }, { threshold: 0.1 });

            cards.forEach(card => {
                card.style.opacity = '0';
                card.style.transform = 'translateY(30px)';
                card.style.transition = 'opacity 0.8s ease, transform 0.8s ease';
                observer.observe(card);
            });

            // Animate counters
            const counters = document.querySelectorAll('.animated-counter');
            const counterObserver = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        animateCounter(entry.target);
                    }
                });
            });

            counters.forEach(counter => {
                counterObserver.observe(counter);
            });

            // Enhanced table interactions
            const tableRows = document.querySelectorAll('.transactions-table tbody tr');
            tableRows.forEach((row, index) => {
                row.style.animationDelay = `${index * 0.05}s`;
                
                row.addEventListener('mouseenter', function() {
                    this.style.background = 'rgba(59, 130, 246, 0.15)';
                    this.style.transform = 'scale(1.02)';
                });
                
                row.addEventListener('mouseleave', function() {
                    this.style.background = '';
                    this.style.transform = '';
                });
            });

            // Mobile card interactions
            const mobileCards = document.querySelectorAll('.mobile-card');
            mobileCards.forEach(card => {
                card.addEventListener('touchstart', function() {
                    this.style.transform = 'scale(0.98)';
                });
                
                card.addEventListener('touchend', function() {
                    this.style.transform = '';
                });
            });

            // Floating action button visibility
            window.addEventListener('scroll', function() {
                const fab = document.querySelector('.floating-action-button');
                if (window.scrollY > 300) {
                    fab.style.display = 'flex';
                    fab.style.alignItems = 'center';
                    fab.style.justifyContent = 'center';
                } else {
                    fab.style.display = 'none';
                }
            });

            // Progressive loading for large datasets
            const tables = document.querySelectorAll('.transactions-table tbody');
            tables.forEach(table => {
                const rows = table.querySelectorAll('tr');
                if (rows.length > 10) {
                    rows.forEach((row, index) => {
                        if (index > 9) {
                            row.style.display = 'none';
                        }
                    });
                    
                    const loadMoreBtn = document.createElement('button');
                    loadMoreBtn.className = 'btn-enhanced btn-secondary-enhanced mt-3';
                    loadMoreBtn.innerHTML = '<i class="fas fa-plus"></i> عرض المزيد';
                    loadMoreBtn.onclick = () => showMoreRows(table);
                    table.parentElement.appendChild(loadMoreBtn);
                }
            });

            // Keyboard navigation
            document.addEventListener('keydown', function(e) {
                if (e.key === 'Escape') {
                    const activeModal = document.querySelector('.modal.show');
                    if (activeModal) {
                        bootstrap.Modal.getInstance(activeModal).hide();
                    }
                }
            });
        });

        // Utility functions
        function animateCounter(element) {
            const target = parseInt(element.textContent);
            let current = 0;
            const increment = target / 50;
            const timer = setInterval(() => {
                current += increment;
                if (current >= target) {
                    element.textContent = target;
                    clearInterval(timer);
                } else {
                    element.textContent = Math.floor(current);
                }
            }, 30);
        }

        function scrollToTop() {
            window.scrollTo({
                top: 0,
                behavior: 'smooth'
            });
        }

        function showMoreRows(table) {
            const hiddenRows = table.querySelectorAll('tr[style*="display: none"]');
            const nextBatch = Array.from(hiddenRows).slice(0, 10);
            
            nextBatch.forEach((row, index) => {
                setTimeout(() => {
                    row.style.display = '';
                    row.style.opacity = '0';
                    row.style.transform = 'translateY(20px)';
                    
                    setTimeout(() => {
                        row.style.transition = 'opacity 0.5s ease, transform 0.5s ease';
                        row.style.opacity = '1';
                        row.style.transform = '';
                    }, 50);
                }, index * 100);
            });
            
            if (hiddenRows.length <= 10) {
                event.target.style.display = 'none';
            }
        }

        // Touch gestures for mobile
        let touchStartX = 0;
        let touchStartY = 0;

        document.addEventListener('touchstart', function(e) {
            touchStartX = e.touches[0].clientX;
            touchStartY = e.touches[0].clientY;
        });

        document.addEventListener('touchend', function(e) {
            const touchEndX = e.changedTouches[0].clientX;
            const touchEndY = e.changedTouches[0].clientY;
            const diffX = touchStartX - touchEndX;
            const diffY = touchStartY - touchEndY;

            // Swipe left to go back
            if (Math.abs(diffX) > Math.abs(diffY) && diffX > 50) {
                if (window.innerWidth <= 768) {
                    history.back();
                }
            }
        });

        // Performance optimization
        const mediaQuery = window.matchMedia('(max-width: 768px)');
        function handleTabletChange(e) {
            if (e.matches) {
                // Mobile optimizations
                document.body.classList.add('mobile-view');
            } else {
                document.body.classList.remove('mobile-view');
            }
        }
        mediaQuery.addListener(handleTabletChange);
        handleTabletChange(mediaQuery);

        // Intersection observer for performance
        const lazyImages = document.querySelectorAll('[data-lazy]');
        const imageObserver = new IntersectionObserver((entries, observer) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    const img = entry.target;
                    img.src = img.dataset.lazy;
                    img.classList.remove('loading-skeleton');
                    observer.unobserve(img);
                }
            });
        });

        lazyImages.forEach(img => imageObserver.observe(img));
    </script>
}